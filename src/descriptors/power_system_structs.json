{
    "auto_generated_structs": [
    {
        "struct_name": "InertiaReserve",
        "docstring": "Data Structure for the procurement products for system simulations.",
        "parametric": "ReserveDirection",
        "fields": [
          {
            "null_value": "init",
            "name": "name",
            "data_type": "String"
          },
          {
            "null_value": "false",
            "name": "available",
            "data_type": "Bool"
          },
          {
            "name": "time_frame",
            "comment": "the relative saturation time_frame",
            "null_value": "0.0",
            "data_type": "Float64",
            "valid_range": {
              "min": 0,
              "max": null
            },
            "validation_action": "error"
          },
          {
            "name": "requirement",
            "comment": "the required quantity of the product should be scaled by a TimeSeriesData",
            "null_value": "0.0",
            "data_type": "Float64"
          },
          {
            "name": "ext",
            "data_type": "Dict{String, Any}",
            "null_value": "Dict{String, Any}()",
            "default": "Dict{String, Any}()"
          },
          {
            "name": "time_series_container",
            "comment": "internal time_series storage",
            "null_value": "InfrastructureSystems.TimeSeriesContainer()",
            "data_type": "InfrastructureSystems.TimeSeriesContainer",
            "default": "InfrastructureSystems.TimeSeriesContainer()"
          },
          {
            "name": "internal",
            "comment": "power system internal reference, do not modify",
            "data_type": "InfrastructureSystemsInternal",
            "internal_default": "InfrastructureSystemsInternal()",
            "exclude_setter": true
          }
        ],
        "supertype": "Reserve{T}"
      },
      {
        "struct_name": "CleanEnergyReserve",
        "docstring": "Data Structure for the procurement products for system simulations.",
        "parametric": "ReserveDirection",
        "fields": [
          {
            "null_value": "init",
            "name": "name",
            "data_type": "String"
          },
          {
            "null_value": "false",
            "name": "available",
            "data_type": "Bool"
          },
          {
            "name": "time_frame",
            "comment": "the relative saturation time_frame",
            "null_value": "0.0",
            "data_type": "Float64",
            "valid_range": {
              "min": 0,
              "max": null
            },
            "validation_action": "error"
          },
          {
            "name": "requirement",
            "comment": "the required quantity of the product should be scaled by a TimeSeriesData",
            "null_value": "0.0",
            "data_type": "Float64"
          },
          {
            "name": "ext",
            "data_type": "Dict{String, Any}",
            "null_value": "Dict{String, Any}()",
            "default": "Dict{String, Any}()"
          },
          {
            "name": "time_series_container",
            "comment": "internal time_series storage",
            "null_value": "InfrastructureSystems.TimeSeriesContainer()",
            "data_type": "InfrastructureSystems.TimeSeriesContainer",
            "default": "InfrastructureSystems.TimeSeriesContainer()"
          },
          {
            "name": "internal",
            "comment": "power system internal reference, do not modify",
            "data_type": "InfrastructureSystemsInternal",
            "internal_default": "InfrastructureSystemsInternal()",
            "exclude_setter": true
          }
        ],
        "supertype": "Reserve{T}"
      },
      {
        "struct_name": "ThermalCleanEnergy",
        "docstring": "Data Structure for thermal generation technologies.",
        "fields": [
          {
            "null_value": "init",
            "name": "name",
            "data_type": "String"
          },
          {
            "null_value": "false",
            "name": "available",
            "data_type": "Bool"
          },
          {
            "null_value": "false",
            "name": "status",
            "data_type": "Bool"
          },
          {
            "name": "bus",
            "null_value": "Bus(nothing)",
            "data_type": "Bus"
          },
          {
            "name": "active_power",
            "null_value": "0.0",
            "data_type": "Float64",
            "valid_range": "active_power_limits",
            "validation_action": "warn",
            "needs_conversion": true
          },
          {
            "name": "reactive_power",
            "null_value": "0.0",
            "data_type": "Float64",
            "valid_range": "reactive_power_limits",
            "validation_action": "warn",
            "needs_conversion": true
          },
          {
            "name": "rating",
            "comment": "Thermal limited MVA Power Output of the unit. <= Capacity",
            "null_value": "0.0",
            "data_type": "Float64",
            "valid_range": {
              "min": 0,
              "max": null
            },
            "validation_action": "error",
            "needs_conversion": true
          },
          {
            "name": "active_power_limits",
            "null_value": "(min=0.0, max=0.0)",
            "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}",
            "valid_range": {
              "min": 0,
              "max": null
            },
            "validation_action": "warn",
            "needs_conversion": true
          },
          {
            "name": "reactive_power_limits",
            "null_value": "nothing",
            "data_type": "Union{Nothing, Min_Max}",
            "needs_conversion": true
          },
          {
            "name": "ramp_limits",
            "comment": "ramp up and ramp down limits in MW (in component base per unit) per minute",
            "null_value": "nothing",
            "data_type": "Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}",
            "valid_range": {
              "min": 0,
              "max": null
            },
            "validation_action": "error",
            "needs_conversion": true
          },
          {
            "name": "operation_cost",
            "null_value": "ThreePartCost(nothing)",
            "data_type": "OperationalCost"
          },
          {
            "name": "base_power",
            "comment": "Base power of the unit in MVA",
            "null_value": "0.0",
            "data_type": "Float64",
            "valid_range": {
              "min": 0,
              "max": null
            },
            "validation_action": "warn"
          },
          {
            "name": "time_limits",
            "comment": "Minimum up and Minimum down time limits in hours",
            "null_value": "nothing",
            "data_type": "Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}",
            "valid_range": {
              "min": 0,
              "max": null
            },
            "validation_action": "error",
            "default": "nothing"
          },
          {
            "name": "prime_mover",
            "comment": "Prime mover technology according to EIA 923",
            "null_value": "PrimeMovers.OT",
            "data_type": "PrimeMovers",
            "default": "PrimeMovers.OT"
          },
          {
            "name": "fuel",
            "comment": "Prime mover fuel according to EIA 923",
            "null_value": "ThermalFuels.OTHER",
            "data_type": "ThermalFuels",
            "default": "ThermalFuels.OTHER"
          },
          {
            "name": "services",
            "data_type": "Vector{Service}",
            "comment": "Services that this device contributes to",
            "null_value": "Device[]",
            "default": "Device[]"
          },
          {
            "null_value": "INFINITE_TIME",
            "name": "time_at_status",
            "data_type": "Float64",
            "default": "INFINITE_TIME"
          },
          {
            "name": "dynamic_injector",
            "data_type": "Union{Nothing, DynamicInjection}",
            "comment": "corresponding dynamic injection device",
            "null_value": "nothing",
            "exclude_setter": true,
            "default": "nothing"
          },
          {
            "name": "ext",
            "data_type": "Dict{String, Any}",
            "null_value": "Dict{String, Any}()",
            "default": "Dict{String, Any}()"
          },
          {
            "name": "time_series_container",
            "comment": "internal time_series storage",
            "null_value": "InfrastructureSystems.TimeSeriesContainer()",
            "data_type": "InfrastructureSystems.TimeSeriesContainer",
            "default": "InfrastructureSystems.TimeSeriesContainer()"
          },
          {
            "name": "internal",
            "comment": "power system internal reference, do not modify",
            "data_type": "InfrastructureSystemsInternal",
            "internal_default": "InfrastructureSystemsInternal()",
            "exclude_setter": true
          }
        ],
        "supertype": "ThermalGen"
      }
    ]
}
